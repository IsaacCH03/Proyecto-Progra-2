package business;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Insets;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import domain.Product;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TextArea;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Region;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class GUIMarketController {
	@FXML
	private TextField tfSearch;
	@FXML
	private Button btnSearch;
	@FXML
	private VBox chosenProductCard;
	@FXML
	private Label lblNameProduct;
	@FXML
	private Label lblPriceProduct;
	@FXML
	private ImageView ivProduct;
	@FXML
	private Label lblIDproduct;
	@FXML
	private Label lblDescription;
	@FXML
	private Label lblStock;
	@FXML
	private Label lblCategory;
	@FXML
	private Label lblValue;
	@FXML
	private TextArea taComments;
	@FXML
	private Button btnAddCart;
	@FXML
	private Button btnMyAccount;
	@FXML
	private GridPane gridPane;
	@FXML
	private Button btnAddFav;
	
	ClientFunction clientF;
	
	
	@FXML
	private ScrollPane scrollPane;
	private Image image;
	
	private MyListener myListener;

	private List<Product> products = new ArrayList<>();

	public void initialize() {
		loadData(clientF);
	  
	}
	// este metodo es para poder agregar un producto al catalogo en tiempo real pero no esta implementado (no pude)
//	public void addNewProductToCatalog(Product product) {
//		 int column = 0;
//		    int row = 1;
//	    try {
//	        FXMLLoader fxmlLoader = new FXMLLoader();
//	        fxmlLoader.setLocation(getClass().getResource("/presentation/GUIItem.fxml"));
//	        AnchorPane anchorPane = fxmlLoader.load();
//
//	        GUIItemController itemController = fxmlLoader.getController();
//	        itemController.setData(product, myListener);
//
//	        gridPane.add(anchorPane, column++, row);
//	        if (column == 3) { // MÃ¡ximo 3 por fila
//	            column = 0;
//	            row++;
//	        }
//
//	        GridPane.setMargin(anchorPane, new Insets(10));
//	    } catch (IOException e) {
//	        e.printStackTrace();
//	    }
//	}


	
	private void setChosenProduct(Product product) {// metodo para asignar un producto a la tarjeta de producto seleccionada
		lblNameProduct.setText(product.getName());
		lblPriceProduct.setText("â‚¡" + product.getPrice());
		String imagePath = product.getUrlImage();
		if (!imagePath.startsWith("file:")) {//Si no es una ruta de archivo local entonces se le agrega el "file:" para que la imagen se pueda cargar 
		    imagePath = "file:" + imagePath;//Se le agrega el "file:" a la ruta de la imagen
		}
		Image image = new Image(imagePath);
		ivProduct.setImage(image);
		lblIDproduct.setText(product.getIdProduct());
		lblDescription.setText(product.getDescription());
		lblStock.setText(""+product.getStock());
		lblCategory.setText(product.getCategory());
		lblValue.setText(""+product.getValue());
		
	}
	

	// Event Listener on Button[#btnSearch].onAction
	@FXML
	public void searchProduct(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#btnAddCart].onAction
	@FXML
	public void addCart(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on Button[#btnMyAccount].onAction
	@FXML
	public void windowMyAccount(ActionEvent event) {
		// TODO Autogenerated
	}
	

    @FXML
    public void addFav(ActionEvent event) {

    }
    
    public void loadData(ClientFunction clientF) {
        this.clientF = clientF;

        if (this.clientF == null) {
            System.out.println("Error: clientF es NULL en GUIMarketController.");
            return;
        }

        if (!clientF.getProducts().isEmpty()) {
            products = clientF.getProducts();

            if (products.size() > 0) {
                setChosenProduct(products.get(0));
                myListener = product -> setChosenProduct(product);
            }

            int column = 0;
            int row = 1;

            try {
                for (Product product : products) {
                    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/presentation/GUIItem.fxml"));
                    AnchorPane anchorPane = fxmlLoader.load();

                    GUIItemController itemController = fxmlLoader.getController();
                    itemController.setData(product, myListener);

                    gridPane.add(anchorPane, column++, row);
                    if (column == 3) {
                        column = 0;
                        row++;
                    }

                    GridPane.setMargin(anchorPane, new Insets(10));
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            System.out.println("Catálogo vacío.");
        }
    }


	public void closeWindows() {
		 try {
	            FXMLLoader loader = new FXMLLoader(getClass().getResource("/presentation/GUIMainWindow.fxml"));
	            Parent root = loader.load();

	            Scene scene = new Scene(root);
	            Stage stage = new Stage();
	            stage.setScene(scene);
	            scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
	            stage.show();

	            GUIMainWindowController controller = loader.getController();
	            controller.loadData(clientF);

	            Stage temp = (Stage) this.btnAddCart.getScene().getWindow();
	            temp.close();
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
		
	}
}
